name: MakoBlog Backend Build Pipeline

env:
  CODE_ROOT: src
  BACKEND_SLN: MakoBlogBackend.sln
  BACKEND_PROJ: src/Server/MakoBlogAPI/

on:
  push:
    branches: [main]
    paths:
      - "src/Server/**"
      - "src/Common/**"
      - "src/MakoBlogBackend.sln"
  pull_request:
    branches: [main]
    paths:
      - "src/Server/**"
      - "src/Common/**"
      - "src/MakoBlogBackend.sln"
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Restore dependencies
        run: dotnet restore ${{ env.BACKEND_SLN }}
        working-directory: ${{ env.CODE_ROOT }}

      - name: Build
        run: dotnet build ${{ env.BACKEND_SLN }} --no-restore --configuration Release
        working-directory: ${{ env.CODE_ROOT }}/

      - name: Upload Build Artefact
        uses: actions/upload-artifact@v2
        with:
          name: build-artefact
          path: |
            ${{ env.CODE_ROOT }}/Server/**/bin/
            ${{ env.CODE_ROOT }}/Server/**/obj/
            ${{ env.CODE_ROOT }}/Common/**/bin/
            ${{ env.CODE_ROOT }}/Common/**/obj/

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    if: ${{ success() && (github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch') }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Restore dependencies
        run: dotnet restore ${{ env.BACKEND_SLN }}
        working-directory: ${{ env.CODE_ROOT }}/

      - name: Download Build Artefact
        uses: actions/download-artifact@v2
        with:
          name: build-artefact
          path: ${{ env.CODE_ROOT }}/

      - name: Unit Tests
        run: dotnet test ${{ env.BACKEND_SLN }} --no-build --verbosity normal --configuration Release
        working-directory: ${{ env.CODE_ROOT }}/

  publish:
    name: Publish Backend
    runs-on: ubuntu-latest
    needs: build
    if: ${{ success() && (github.event_name == 'push' || github.event_name == 'workflow_dispatch') }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Restore dependencies
        run: dotnet restore ${{ env.BACKEND_SLN }}
        working-directory: ${{ env.CODE_ROOT }}/

      - name: Download Build Artefact
        uses: actions/download-artifact@v2
        with:
          name: build-artefact
          path: ${{ env.CODE_ROOT }}/

      - name: Publish Backend
        run: dotnet publish --no-build --verbosity normal --configuration Release --runtime linux-x64 --self-contained true -p:BlazorEnableCompression=false
        working-directory: ${{ env.BACKEND_PROJ }}/

      - name: Upload Backend Published Artefact
        uses: actions/upload-artifact@v2
        with:
          name: Backend-published
          path: ${{ env.BACKEND_PROJ }}/bin/Release/net6.0/publish/wwwroot
